# EditorConfig is awesome: http://editorconfig.org
root = true

[*.{csproj,props,targets}]
charset = utf-8-bom
end_of_line = lf
insert_final_newline = true
indent_style = space
indent_size = 2
trim_trailing_whitespace = true

[*.g.cs]
generated_code = true

[*.cs]
end_of_line = crlf
insert_final_newline = true
indent_style = space
indent_size = 4
trim_trailing_whitespace = true

# file scoped namespaces
IDE0160.severity = none
IDE0161.severity = none

# allow this. qualification
IDE0003.severity = none

#Roslyn naming styles

#all_lower for private and local constants/static readonlys
dotnet_naming_style.all_lower.capitalization = all_lower
dotnet_naming_style.all_lower.word_separator = _

dotnet_naming_symbols.private_constants.applicable_accessibilities = private
dotnet_naming_symbols.private_constants.required_modifiers = const
dotnet_naming_symbols.private_constants.applicable_kinds = field
dotnet_naming_rule.private_const_all_lower.severity = warning
dotnet_naming_rule.private_const_all_lower.symbols = private_constants
dotnet_naming_rule.private_const_all_lower.style = all_lower

dotnet_naming_symbols.private_static_readonly.applicable_accessibilities = private
dotnet_naming_symbols.private_static_readonly.required_modifiers = static,readonly
dotnet_naming_symbols.private_static_readonly.applicable_kinds = field
dotnet_naming_rule.private_static_readonly_all_lower.severity = warning
dotnet_naming_rule.private_static_readonly_all_lower.symbols = private_static_readonly
dotnet_naming_rule.private_static_readonly_all_lower.style = all_lower

dotnet_naming_symbols.local_constants.applicable_kinds = local
dotnet_naming_symbols.local_constants.required_modifiers = const
dotnet_naming_rule.local_const_all_lower.severity = warning
dotnet_naming_rule.local_const_all_lower.symbols = local_constants
dotnet_naming_rule.local_const_all_lower.style = all_lower

#ALL_UPPER for non private constants/static readonlys
dotnet_naming_style.all_upper.capitalization = all_upper
dotnet_naming_style.all_upper.word_separator = _

dotnet_naming_symbols.public_constants.applicable_accessibilities = public,internal,protected,protected_internal,private_protected
dotnet_naming_symbols.public_constants.required_modifiers = const
dotnet_naming_symbols.public_constants.applicable_kinds = field
dotnet_naming_rule.public_const_all_upper.severity = warning
dotnet_naming_rule.public_const_all_upper.symbols = public_constants
dotnet_naming_rule.public_const_all_upper.style = all_upper

dotnet_naming_symbols.public_static_readonly.applicable_accessibilities = public,internal,protected,protected_internal,private_protected
dotnet_naming_symbols.public_static_readonly.required_modifiers = static,readonly
dotnet_naming_symbols.public_static_readonly.applicable_kinds = field
dotnet_naming_rule.public_static_readonly_all_upper.severity = warning
dotnet_naming_rule.public_static_readonly_all_upper.symbols = public_static_readonly
dotnet_naming_rule.public_static_readonly_all_upper.style = all_upper

#Roslyn formating options

#Formatting - indentation options
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

#Formatting - new line options
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_open_brace = all
#csharp_new_line_before_members_in_anonymous_types = true
#csharp_new_line_before_members_in_object_initializers = true # Currently no effect in VS/dotnet format (16.4), and makes Rider confusing
csharp_new_line_between_query_expression_clauses = true

#Formatting - organize using options
dotnet_sort_system_directives_first = true

#Formatting - spacing options
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false

#Formatting - wrapping options
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

#Roslyn language styles

#Style - this. qualification
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

#Style - type names
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Prefer var for built-in types
csharp_style_var_for_built_in_types = true:suggestion

# Prefer var when the type is apparent
csharp_style_var_when_type_is_apparent = true:suggestion

# Prefer var elsewhere
csharp_style_var_elsewhere = true:suggestion

#Style - modifiers
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning
csharp_preferred_modifier_order = public,private,protected,internal,new,abstract,virtual,sealed,override,static,readonly,extern,unsafe,volatile,async:warning

#Style - parentheses
# Skipped because roslyn cannot separate +-*/ with << >>

#Style - expression bodies
csharp_style_expression_bodied_accessors = true:warning
csharp_style_expression_bodied_constructors = false:none
csharp_style_expression_bodied_indexers = true:warning
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_operators = true:warning
csharp_style_expression_bodied_properties = true:warning
csharp_style_expression_bodied_local_functions = true:silent

#Style - expression preferences
dotnet_style_object_initializer = true:warning
dotnet_style_collection_initializer = true:warning
dotnet_style_prefer_inferred_anonymous_type_member_names = true:warning
dotnet_style_prefer_auto_properties = false:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_compound_assignment = true:warning

#Style - null/type checks
dotnet_style_coalesce_expression = true:warning
dotnet_style_null_propagation = true:warning
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_throw_expression = true:silent
csharp_style_conditional_delegate_call = true:warning

#Style - unused
dotnet_style_readonly_field = true:silent
dotnet_code_quality_unused_parameters = non_public:silent
csharp_style_unused_value_expression_statement_preference = discard_variable:silent
csharp_style_unused_value_assignment_preference = discard_variable:warning

#Style - variable declaration
csharp_style_inlined_variable_declaration = true:warning
csharp_style_deconstructed_variable_declaration = true:warning

#Style - other C# 7.x features
dotnet_style_prefer_inferred_tuple_names = true:warning
csharp_prefer_simple_default_expression = true:warning
csharp_style_pattern_local_over_anonymous_function = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:silent

#Style - C# 8 features
csharp_prefer_static_local_function = true:warning
csharp_prefer_simple_using_statement = true:silent
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_prefer_switch_expression = false:none

# Use file scoped namespaces
csharp_style_namespace_declarations = file_scoped:warning

# Naming rules
dotnet_naming_rule.interface_should_be_begins_with_i.severity = Error

dotnet_naming_style.camel_case_style.capitalization = camel_case

# camelCase for private methods
dotnet_naming_style.camelcase_methods.capitalization = camel_case
dotnet_naming_symbols.private_methods.applicable_accessibilities = private
dotnet_naming_symbols.private_methods.applicable_kinds = method
dotnet_naming_rule.private_methods_camelcase.severity = warning
dotnet_naming_rule.private_methods_camelcase.symbols = private_methods
dotnet_naming_rule.private_methods_camelcase.style = camelcase_methods

# we allow camelCase for methods due to the design of our structure
# see GameObject for more details

# PascalCase for public methods
# dotnet_naming_style.pascalcase_methods.capitalization = pascal_case
# dotnet_naming_symbols.public_methods.applicable_accessibilities = public
# dotnet_naming_symbols.public_methods.applicable_kinds = method
# dotnet_naming_rule.public_methods_pascalcase.severity = warning
# dotnet_naming_rule.public_methods_pascalcase.symbols = public_methods
# dotnet_naming_rule.public_methods_pascalcase.style = pascalcase_methods

# camelCase or PascalCase for protected methods
dotnet_naming_symbols.protected_methods.applicable_accessibilities = protected
dotnet_naming_symbols.protected_methods.applicable_kinds = method
dotnet_naming_rule.protected_methods_camelcase.severity = warning
dotnet_naming_rule.protected_methods_camelcase.symbols = protected_methods
dotnet_naming_rule.protected_methods_camelcase.styles = camelcase_methods, pascalcase_methods

# _camelCase for private fields
dotnet_naming_style.underscore_prefix_fields.capitalization = camel_case
dotnet_naming_style.underscore_prefix_fields.required_prefix = _
dotnet_naming_symbols.private_fields_with_underscore.applicable_accessibilities = private
dotnet_naming_symbols.private_fields_with_underscore.applicable_kinds = field
dotnet_naming_rule.private_fields_with_underscore_prefix.severity = suggestion
dotnet_naming_rule.private_fields_with_underscore_prefix.symbols = private_fields_with_underscore
dotnet_naming_rule.private_fields_with_underscore_prefix.style = underscore_prefix_fields

# camelCase for private and protected fields
dotnet_naming_style.camelcase_fields.capitalization = camel_case
dotnet_naming_symbols.private_protected_fields_without_underscore.applicable_accessibilities = private, protected
dotnet_naming_symbols.private_protected_fields_without_underscore.applicable_kinds = field
dotnet_naming_rule.private_protected_fields_without_underscore_prefix.severity = suggestion
dotnet_naming_rule.private_protected_fields_without_underscore_prefix.symbols = private_protected_fields_without_underscore
dotnet_naming_rule.private_protected_fields_without_underscore_prefix.style = camelcase_fields

# camelCase for private properties
dotnet_naming_symbols.private_properties.applicable_accessibilities = private
dotnet_naming_symbols.private_properties.applicable_kinds = property
dotnet_naming_rule.private_properties_camelcase.severity = warning
dotnet_naming_rule.private_properties_camelcase.symbols = private_properties
dotnet_naming_rule.private_properties_camelcase.style = camelcase_fields

# camelCase or PascalCase for protected fields and properties
dotnet_naming_style.pascalcase_style.capitalization = pascal_case
dotnet_naming_symbols.protected_fields_properties_symbols.applicable_kinds = field, property
dotnet_naming_symbols.protected_fields_properties_symbols.applicable_accessibilities = protected
dotnet_naming_rule.protected_fields_properties_should_be_camel_case_or_pascal_case.severity = warning
dotnet_naming_rule.protected_fields_properties_should_be_camel_case_or_pascal_case.symbols = protected_fields_properties_symbols
dotnet_naming_rule.protected_fields_properties_should_be_camel_case_or_pascal_case.styles = camelcase_fields, pascalcase_style

# PascalCase for public fields and properties
dotnet_naming_symbols.public_fields_properties_symbols.applicable_kinds = field, property
dotnet_naming_symbols.public_fields_properties_symbols.applicable_accessibilities = public
dotnet_naming_rule.public_fields_properties_should_be_pascal_case.severity = warning
dotnet_naming_rule.public_fields_properties_should_be_pascal_case.symbols = public_fields_properties_symbols
dotnet_naming_rule.public_fields_properties_should_be_pascal_case.style = pascalcase_stylets.applicable_kinds = field
dotnet_naming_symbols.constants.required_modifiers = const
dotnet_naming_rule.constants_all_upper.severity = warning
dotnet_namforing_rule.constants_all_upper.symbols = constants
dotnet_naming_rule.constants_all_upper.style = all_upper

[*.{yaml,yml}]
insert_final_newline = true
indent_style = space
indent_size = 2
trim_trailing_whitespace = true
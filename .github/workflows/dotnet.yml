# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET CI

on: [push, pull_request]

jobs:
  test:
    env:
      IS_CI_ENVIRONMENT: true

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal

  inspect-code:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore

    - name: Dotnet code style
      run: dotnet build -c Debug -p:EnforceCodeStyleInBuild=true

    - name: Restore Tools
      run: |
        dotnet tool restore
        dotnet tool install --global nvika 
        dotnet tool install --global JetBrains.ReSharper.GlobalTools

    - name: CodeFileSanity
      run: |
        # TODO: Add ignore filters and GitHub Workflow Command Reporting in CFS. That way we don't have to do this workaround.
        # FIXME: Suppress warnings from templates project
        exit_code=0
        while read -r line; do
          if [[ ! -z "$line" ]]; then
            echo "::error::$line"
            exit_code=1
          fi
        done <<< $(dotnet codefilesanity)
        exit $exit_code

    - name: InspectCode
      run: jb inspectcode $(pwd)/Danmaku!.sln --no-build --output="inspectcodereport.xml" --caches-home="inspectcode" --verbosity=WARN

    - name: NVika
      run: nvika parsereport "${{github.workspace}}/inspectcodereport.xml" --treatwarningsaserrors

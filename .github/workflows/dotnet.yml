name: Continuous Integration

on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:
  test:
    env:
      IS_CI_ENVIRONMENT: true

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  inspect-code:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore

    - name: Dotnet code style
      run: dotnet build -c Debug -p:EnforceCodeStyleInBuild=true

    # - name: Restore Tools
    #   run: |
    #     dotnet tool restore
    #     dotnet tool install --global nvika
    #     dotnet tool install --global JetBrains.ReSharper.GlobalTools

    # - name: CodeFileSanity
    #   run: |
    #     # TODO: Add ignore filters and GitHub Workflow Command Reporting in CFS. That way we don't have to do this workaround.
    #     # FIXME: Suppress warnings from templates project
    #     exit_code=0
    #     while read -r line; do
    #       if [[ ! -z "$line" ]]; then
    #         echo "::error::$line"
    #         exit_code=1
    #       fi
    #     done <<< $(dotnet codefilesanity)
    #     exit $exit_code

    # - name: InspectCode
    #   run: jb inspectcode $(pwd)/Danmaku!.sln --no-build --output="inspectcodereport.xml" --caches-home="inspectcode" --verbosity=WARN

    # - name: NVika
    #   run: nvika parsereport "${{github.workspace}}/inspectcodereport.xml" --treatwarningsaserrors

  auto-format:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore

    - name: Restore Tools
      run: |
        dotnet tool restore
        dotnet tool install --global JetBrains.ReSharper.GlobalTools

    - name: Auto Format
      run: dotnet format --verbosity diagnostic

    - name: Check for changes
      id: git-check
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_ENV
        fi

    - name: Setup Git
      if: env.changed == 'true'
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Commit changes
      if: env.changed == 'true'
      run: |
        git add .
        git commit -m "CI format code"

    - name: Push changes
      if: env.changed == 'true'
      run: |
        ref=${{ github.ref }}
        branch="${ref#refs/heads/}"
        git push origin HEAD:$branch
